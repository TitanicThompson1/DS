name: Frontend
on: [pull_request]

jobs:
  build-and-lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: npm install
      run: npm install
    - name: lint
      run: npm run lint
    - name: run
      run: npm run build --if-present
  
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1
      with:
        envkey_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
        envkey_FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
        envkey_FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
        envkey_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
        envkey_FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
        envkey_FIREBASE_MEASUREMENT_ID: ${{secrets.FIREBASE_MEASUREMENT_ID}}
        envkey_FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
        envkey_SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
        envkey_SENDER_EMAIL_PASSWORD: ${{secrets.SENDER_EMAIL_PASSWORD}}
        envkey_REVIEWS_DESTINATION_EMAIL: ${{secrets.REVIEWS_DESTINATION_EMAIL}}
        envkey_ALGOLIA_APPLICATION_ID: ${{secrets.ALGOLIA_APPLICATION_ID}}
        envkey_ALGOLIA_API_KEY: ${{secrets.ALGOLIA_API_KEY}}
        directory: backend
        file_name: .env
    - name: Check current directory
      run: pwd & ls -la & cat .env & ls -la backend & cat backend/.env
    - name: Build the docker-compose stack
      run: docker-compose -f docker-compose.yml up -d
    - name: Check running containers
      run: docker ps -a
    - name: Run test suite
      run: cd frontend && npm run test --if-present