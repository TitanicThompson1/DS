name: Frontend
on: [pull_request]

env:
  FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
  FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
  FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
  FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
  FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
  FIREBASE_MEASUREMENT_ID: ${{secrets.FIREBASE_MEASUREMENT_ID}}
  FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
  SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
  SENDER_EMAIL_PASSWORD: ${{secrets.SENDER_EMAIL_PASSWORD}}
  REVIEWS_DESTINATION_EMAIL: ${{secrets.REVIEWS_DESTINATION_EMAIL}}
  ALGOLIA_APPLICATION_ID: ${{secrets.ALGOLIA_APPLICATION_ID}}
  ALGOLIA_API_KEY: ${{secrets.ALGOLIA_API_KEY}}

jobs:
  build-and-lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: npm install
      run: npm install
    - name: lint
      run: npm run lint
    - name: run
      run: npm run build --if-present
  
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Check current directory
      run: pwd & ls -la & ls -la backend

    - name: Build the docker-compose stack
      run: docker-compose -f docker-compose_workflows.yml up -d

    - name: Check running containers
      run: docker ps -a

    - name: Wait for frontend to start
      run: sleep 30

    - name: Run react test
      run: docker exec ds-meic5_frontend_1 npm run test --if-present

    - name: Install TestCafe
      run: npm install -g testcafe

    - name: Run ui tests with TestCafe
      run: cd frontend && npm run test-ui