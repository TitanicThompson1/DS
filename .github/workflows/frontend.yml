name: Frontend
on: [pull_request]

jobs:
  build-and-lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: npm install
      run: npm install
    - name: lint
      run: npm run lint
    - name: run
      run: npm run build --if-present
  
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Check current directory
      run: pwd & ls -la & ls -la backend
    - name: Build the docker-compose stack
      run: docker-compose up -d
    - name: Add environment variables with secrets
      run: |
        docker exec ds-test_backend_1 ENV FIREBASE_API_KEY=${{secrets.FIREBASE_API_KEY}}
        docker exec ds-test_backend_1 ENV FIREBASE_AUTH_DOMAIN=${{secrets.FIREBASE_AUTH_DOMAIN}}
        docker exec ds-test_backend_1 ENV FIREBASE_STORAGE_BUCKET=${{secrets.FIREBASE_STORAGE_BUCKET}}
        docker exec ds-test_backend_1 ENV FIREBASE_MESSAGING_SENDER_ID=${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
        docker exec ds-test_backend_1 ENV FIREBASE_APP_ID=${{secrets.FIREBASE_APP_ID}}
        docker exec ds-test_backend_1 ENV FIREBASE_MEASUREMENT_ID=${{secrets.FIREBASE_MEASUREMENT_ID}}
        docker exec ds-test_backend_1 ENV FIREBASE_PROJECT_ID=${{secrets.FIREBASE_PROJECT_ID}}
        docker exec ds-test_backend_1 ENV SENDER_EMAIL=${{secrets.SENDER_EMAIL}}
        docker exec ds-test_backend_1 ENV SENDER_EMAIL_PASSWORD=${{secrets.SENDER_EMAIL_PASSWORD}}
        docker exec ds-test_backend_1 ENV REVIEWS_DESTINATION_EMAIL=${{secrets.REVIEWS_DESTINATION_EMAIL}}
        docker exec ds-test_backend_1 ENV ALGOLIA_APPLICATION_ID=${{secrets.ALGOLIA_APPLICATION_ID}}
        docker exec ds-test_backend_1 ENV ALGOLIA_API_KEY=${{secrets.ALGOLIA_API_KEY}}
    - name: Restart docker
      run: docker-compose stop && docker-compose up -d
    - name: Check running containers
      run: docker ps -a
    - name: Wait for frontend to start
      run: sleep 30
    - name: Run react test
      run: docker exec ds-test_frontend_1 npm run test --if-present
    - name: Install TestCafe
      run: npm install -g testcafe
    - name: Run ui tests with TestCafe
      run: cd frontend && npm run test-ui